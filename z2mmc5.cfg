MEMORY {
    ZEROPAGE: start = $00,    size = $0100, type = rw, file = "";
    RAM:    start = $0100,  size = $0700, type = rw, file = "";
	HIRAM:   start = $6000,  size = $2000, type = rw, file = "";
    HDR:    start = $0000,  size = $0010, type = ro, file = %O;
    PRG0:   bank = $0, start = $8000,  size = $2000, type = ro, file = %O;
    PRG1:   bank = $1, start = $a000,  size = $2000, type = ro, file = %O;
	PRG2:   bank = $2, start = $8000,  size = $2000, type = ro, file = %O;
    PRG3:   bank = $3, start = $a000,  size = $2000, type = ro, file = %O;
    PRG4:   bank = $4, start = $8000,  size = $2000, type = ro, file = %O;
    PRG5:   bank = $5, start = $a000,  size = $2000, type = ro, file = %O;
	PRG6:   bank = $6, start = $8000,  size = $2000, type = ro, file = %O;
    PRG7:   bank = $7, start = $a000,  size = $2000, type = ro, file = %O;
    PRG8:   bank = $8, start = $8000,  size = $2000, type = ro, file = %O;
    PRG9:   bank = $9, start = $a000,  size = $2000, type = ro, file = %O;
	PRGA:   bank = $a, start = $8000,  size = $2000, type = ro, file = %O;
    PRGB:   bank = $b, start = $a000,  size = $2000, type = ro, file = %O;
    PRGC:   bank = $c, start = $8000,  size = $2000, type = ro, file = %O;
    PRGD:   bank = $d, start = $a000,  size = $2000, type = ro, file = %O;
	PRGE:   bank = $e, start = $c000,  size = $2000, type = ro, file = %O;
    PRGF:   bank = $f, start = $e000,  size = $2000, type = ro, file = %O;
	PRG10:   bank = $10, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG11:   bank = $11, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG12:   bank = $12, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG13:   bank = $13, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG14:   bank = $14, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG15:   bank = $15, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG16:   bank = $16, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG17:   bank = $17, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG18:   bank = $18, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG19:   bank = $19, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG1A:   bank = $1A, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG1B:   bank = $1B, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG1C:   bank = $1C, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG1D:   bank = $1D, start = $a000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG1E:   bank = $1E, start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;
	PRG1F:   bank = $1F, start = $e000,  size = $2000, type = ro, file = %O, fill = yes, fillval = 0;

    CHR0:    start = $0000, size = $2000, type = ro, file = %O;
    CHR1:    start = $0000, size = $2000, type = ro, file = %O;
    CHR2:    start = $0000, size = $2000, type = ro, file = %O;
    CHR3:    start = $0000, size = $2000, type = ro, file = %O;
    CHR4:    start = $0000, size = $2000, type = ro, file = %O;
    CHR5:    start = $0000, size = $2000, type = ro, file = %O;
    CHR6:    start = $0000, size = $2000, type = ro, file = %O;
    CHR7:    start = $0000, size = $2000, type = ro, file = %O;
    CHR8:    start = $0000, size = $2000, type = ro, file = %O;
    CHR9:    start = $0000, size = $2000, type = ro, file = %O;
    CHRA:    start = $0000, size = $2000, type = ro, file = %O;
    CHRB:    start = $0000, size = $2000, type = ro, file = %O;
    CHRC:    start = $0000, size = $2000, type = ro, file = %O;
    CHRD:    start = $0000, size = $2000, type = ro, file = %O;
    CHRE:    start = $0000, size = $2000, type = ro, file = %O;
    CHRF:    start = $0000, size = $2000, type = ro, file = %O;
}

SEGMENTS {
    ZEROPAGE: load = ZEROPAGE,  type = zp;
    VARS:     load = RAM, type = bss;
	HIVARS:   load = HIRAM, type = bss;
	HDR:      load = HDR, type = ro;
    BANK0:    load = PRG0, type = ro;
    BANK1:    load = PRG1, type = ro;
    BANK2:    load = PRG2, type = ro;
    BANK3:    load = PRG3, type = ro;
    BANK4:    load = PRG4, type = ro;
    BANK5:    load = PRG5, type = ro;
    BANK6:    load = PRG6, type = ro;
    BANK7:    load = PRG7, type = ro;
    BANK8:    load = PRG8, type = ro;
    BANK9:    load = PRG9, type = ro;
    BANKA:    load = PRGA, type = ro;
    BANKB:    load = PRGB, type = ro;
    BANKC:    load = PRGC, type = ro;
    BANKD:    load = PRGD, type = ro;
    BANKE:    load = PRGE, type = ro;
    BANKF:    load = PRGF, type = ro;
	BANK10:   load = PRG10, type = ro, optional = yes;
	BANK11:   load = PRG11, type = ro, optional = yes;
	BANK12:   load = PRG12, type = ro, optional = yes;
	BANK13:   load = PRG13, type = ro, optional = yes;
	BANK14:   load = PRG14, type = ro, optional = yes;
	BANK15:   load = PRG15, type = ro, optional = yes;
	BANK16:   load = PRG16, type = ro, optional = yes;
	BANK17:   load = PRG17, type = ro, optional = yes;
	BANK18:   load = PRG18, type = ro, optional = yes;
	BANK19:   load = PRG19, type = ro, optional = yes;
	BANK1A:   load = PRG1A, type = ro, optional = yes;
	BANK1B:   load = PRG1B, type = ro, optional = yes;
	BANK1C:   load = PRG1C, type = ro, optional = yes;
	BANK1D:   load = PRG1D, type = ro, optional = yes;
	BANK1E:   load = PRG1E, type = ro, optional = yes;
	BANK1F:   load = PRG1F, type = ro;

	CHRBANK0: load = CHR0, type = ro;
	CHRBANK1: load = CHR1, type = ro;
	CHRBANK2: load = CHR2, type = ro;
	CHRBANK3: load = CHR3, type = ro;
	CHRBANK4: load = CHR4, type = ro;
	CHRBANK5: load = CHR5, type = ro;
	CHRBANK6: load = CHR6, type = ro;
	CHRBANK7: load = CHR7, type = ro;
	CHRBANK8: load = CHR8, type = ro;
	CHRBANK9: load = CHR9, type = ro;
	CHRBANKA: load = CHRA, type = ro;
	CHRBANKB: load = CHRB, type = ro;
	CHRBANKC: load = CHRC, type = ro;
	CHRBANKD: load = CHRD, type = ro;
	CHRBANKE: load = CHRE, type = ro;
	CHRBANKF: load = CHRF, type = ro;

	PATCH_RESET_HDLR_1F: load = PRG1F, type = ro, define = yes, start = $ffe3;
	
	PATCH_HDR: load = HDR, type = overwrite, define = yes, offset = 4;
	PATCH_HDR_20_PRG_RAM_SIZE: load = HDR, type = overwrite, define = yes, offset = $a;
	
	PATCH_RESET_HDLR_F: load = PRGF, type = overwrite, define = yes, start = $ff70;

	PATCH_CALL_SET_VMIRROR: load = PRGE, type = overwrite, define = yes, start = $c4d0;
	PATCH_CALL_SET_HMIRROR1: load = PRG0, type = overwrite, define = yes, start = $8149;
	PATCH_CALL_SET_HMIRROR2: load = PRGB, type = overwrite, define = yes, start = $a712;
	
	PATCH_CALL_SWITCH_CHR_BANK1: load = PRG0, type = overwrite, define = yes, start = $8150;
	PATCH_CALL_SWITCH_CHR_BANK2: load = PRG1, type = overwrite, define = yes, start = $a86b;
	PATCH_CALL_SWITCH_CHR_BANK3: load = PRGB, type = overwrite, define = yes, start = $a728;
	
	PATCH_WAIT_FOR_SPRITE_0: load = PRGE, type = overwrite, define = yes, start = $d4b2;
	
	BANK_C_FREE_SPACE_1: load = PRGC, type = overwrite, define = yes, start = $878c;
	BANK_C_FREE_SPACE_2: load = PRGC, type = overwrite, define = yes, start = $9da8;
	BANK_D_FREE_SPACE: load = PRGD, type = overwrite, define = yes, start = $ac09;
	BANK_E_FREE_SPACE: load = PRGE, type = overwrite, define = yes, start = $d39a;
	BANK_F_FREE_SPACE_1: load = PRGF, type = overwrite, define = yes, start = $feaa;
	BANK_F_FREE_SPACE_2: load = PRGF, type = overwrite, define = yes, start = $ff4c;
 }
